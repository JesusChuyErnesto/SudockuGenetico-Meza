/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sudoku;

import java.awt.Container;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JTextField;


/**
 *
 * @author Siul
 */
public class SudokuGenetico extends javax.swing.JFrame {
    
    Container c = getContentPane();
    JTextField[] casillas = new JTextField[81];     // vector de casillas del tablero
    final int GENERACIONES = 30000;
    final int POBLACION = 100;
    final int CHIDOS = 10;

    public SudokuGenetico() {
        initComponents();
        
        int posx, posy;
        
        // genera el tablero
        posy = 10;
        
        for(int i=0; i<9; i++){
            
            posx = 200;
            
            for(int j=0; j<9; j++){
                casillas[(9*i)+j] = new JTextField();
                casillas[(9*i)+j].setText("");
                casillas[(9*i)+j].setHorizontalAlignment(JTextField.CENTER);
                
                if((j)%3 == 0){
                    posx += 45;
                }
                else{
                    posx += 35;
                }
                    
                casillas[(9*i)+j].setBounds(posx, posy, 30, 30);

                c.add(casillas[(9*i)+j]);
            }
            
            if((i+1)%3 == 0){
                posy += 45;
            }
            else{
                posy += 35;
            }
        }
        
        casillas[0].setText("4");
        casillas[2].setText("3");
        casillas[6].setText("6");
        casillas[7].setText("7");
        casillas[12].setText("1");
        casillas[14].setText("9");
        casillas[18].setText("2");
        casillas[20].setText("9");
        casillas[22].setText("3");
        casillas[23].setText("6");
        casillas[24].setText("1");
        casillas[28].setText("9");
        casillas[31].setText("6");
        casillas[32].setText("2");
        casillas[36].setText("7");
        casillas[38].setText("6");
        casillas[42].setText("5");
        casillas[44].setText("4");
        casillas[48].setText("5");
        casillas[49].setText("1");
        casillas[52].setText("9");
        casillas[56].setText("1");
        casillas[57].setText("6");
        casillas[58].setText("9");
        casillas[60].setText("3");
        casillas[62].setText("7");
        casillas[66].setText("3");
        casillas[68].setText("8");
        casillas[73].setText("3");
        casillas[74].setText("4");
        casillas[78].setText("9");
        casillas[80].setText("8");
    }
    
    void llenarCasillas(Sudoku respuesta) {
        int cont = 0;
        for(int i=0; i<9; i++){
            for(int j=0; j<9; j++){
                casillas[cont].setText(respuesta.tablero[i][j] + "");
                cont++;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Resolver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(694, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(780, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int[] predefinidos = new int[81];
        Sudoku [] poblacion= new Sudoku[POBLACION];
        Sudoku[] poblacion2 = new Sudoku[POBLACION];
        
        for(int i=0; i<81; i++){
            if(!casillas[i].getText().equals("")){
                predefinidos[i]= Integer.parseInt(casillas[i].getText());
            }
            else{
                predefinidos[i] = 0;
            }
        }
        
        for(int i =0; i<POBLACION; i++){
            poblacion[i] = new Sudoku();
            poblacion2[i] = new Sudoku();
            poblacion[i].ponerMatriz(predefinidos);
        }
        
        for(int k=0; true; k++){
            Arrays.sort(poblacion);
            if(k%10000==0)
                System.out.println("\n***Población " + k + "***" + "fitness : " + poblacion[0].aptitud);
            /*for(int i=0; i<POBLACION;i++){
                System.out.println(poblacion[i].aptitud);
            }*/
            
            /*for(int p=0; p<POBLACION; p++){
                for(int i=0; i<9;i++){
                    for(int j=0; j<9;j++){
                        System.out.print(poblacion[p].tablero[i][j]);
                    }
                    System.out.println();
                }
                
                System.out.println();
            }
            
            System.out.println();*/
            
            if(poblacion[0].aptitud == 243)
                break;

            int cont = 0;
            
            Sudoku[] mejores = new Sudoku[CHIDOS];
            
            for(int i=0; i<CHIDOS;  i++){
                
                mejores[i] = new Sudoku();
                mejores[i] = poblacion[i];
                if(i>1)
                    mejores[i].Mutacion();
                mejores[i].ponerMatriz(predefinidos);
            }
            
            for(int i=0; i<CHIDOS;  i++){
                poblacion2[i] = mejores[i];
            }
            
            Random ale = new Random();
            
            for(int i=CHIDOS; i<POBLACION;  i++){
                int pos1 = ale.nextInt(CHIDOS);
                int pos2 = ale.nextInt(CHIDOS);
                poblacion2[i] = new Sudoku(mejores[pos1], mejores[pos2]);
                poblacion2[i].Mutacion();
                poblacion2[i].ponerMatriz(predefinidos);
                
                //System.out.println("\n***pos1: " + pos1 + "pos2: " + pos2 + "****");
            }
            
            /*for(int i=0; i<10;i++){
                for(int j=0; j<10;j++){
                    if(i == j){
                        poblacion2[cont] = mejores[i];
                    }
                    else{
                        poblacion2[cont] = new Sudoku(mejores[i], mejores[j]);
                        poblacion2[cont].Mutacion();
                    }
                    poblacion2[cont].ponerMatriz(predefinidos);
                    cont++;
                }
            }*/

            poblacion = poblacion2;
            
            for(int i=0; i<CHIDOS;  i++){
                poblacion[i] = mejores[i];
            }

        }
        
        Arrays.sort(poblacion);
        
        System.out.println("\n***Población final***");
        for(int i=0; i<POBLACION;i++){
            System.out.println(poblacion[i].aptitud);
        }
        
        for(int i=0; i<9;i++){
            for(int j=0; j<9;j++){
                System.out.print(poblacion[0].tablero[i][j]);
            }
            System.out.println();
        }
        
        System.out.print("\n" + poblacion[0].aptitud);
        
        llenarCasillas(poblacion[0]);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SudokuGenetico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
